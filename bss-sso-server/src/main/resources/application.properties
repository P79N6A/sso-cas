##
# CAS Server Context Configuration
#
server.context-path=/cas
server.port=8443


server.ssl.key-store=file:D:/keys/caskeystore
server.ssl.key-store-password=123456
server.ssl.key-password=changeit
server.ssl.enabled=true

server.max-http-header-size=2097152
server.use-forward-headers=true
server.connection-timeout=20000
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

server.tomcat.max-http-post-size=2097152
server.tomcat.basedir=build/tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.min-spare-threads=10
server.tomcat.max-threads=200
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.protocol-header-https-value=https
server.tomcat.remote-ip-header=X-FORWARDED-FOR
server.tomcat.uri-encoding=UTF-8

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used.
# Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any
# existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

endpoints.enabled=false
endpoints.sensitive=true

endpoints.restart.enabled=false
endpoints.shutdown.enabled=false

# Control the security of the management/actuator endpoints
# The 'enabled' flag below here controls the rendering of details for the health endpoint amongst other things.
management.security.enabled=true
management.security.roles=ACTUATOR,ADMIN
management.security.sessions=if_required
management.context-path=/status
management.add-application-context-header=false

# Define a CAS-specific "WARN" status code and its order
management.health.status.order=WARN, DOWN, OUT_OF_SERVICE, UNKNOWN, UP

# Control the security of the management/actuator endpoints
# With basic authentication, assuming Spring Security and/or relevant modules are on the classpath.
security.basic.authorize-mode=role
security.basic.path=/cas/status/**
# security.basic.enabled=true
# security.user.name=casuser
# security.user.password=

##
# CAS Web Application Session Configuration
#
server.session.timeout=360
server.session.cookie.http-only=true
server.session.tracking-modes=COOKIE


##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
#开发过程中建议关闭thymeleaf缓存 true:开启，false:关闭
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100
##
# CAS Log4j Configuration
#
# logging.config=file:/etc/sso/log4j2.xml
server.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS Authentication Credentials
#
#注释掉写死的用户 改用jdbc的用户 START
#sso.authn.accept.users=casuser::Mellon
#查询账号密码SQL，必须包含密码字段
#cas.authn.jdbc.query[0].sql=select * from ucenter_user where nickname=?
#指定上面的SQL查询密码字段名（必须）
#cas.authn.jdbc.query[0].fieldPassword=password
#指定过期字段，1为过期，若过期不可用
#cas.authn.jdbc.query[0].fieldExpired=expired
#该字段为不可用字段，当为1时为不可用，需要修改密码
#cas.authn.jdbc.query[0].fieldDisabled=disabled
#数据库连接
#cas.authn.jdbc.query[0].url=jdbc:mysql://192.168.108.54:11191/zheng?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
#数据库方言配置
#如果使用MySQL5.7及以上版本配置MySQL57Dialect
#如果使用MySQL5.7及以下版本配置MySQL5InnoDBDialect
#如果使用Hibernate5.2.9以前的版本直接配置MySQLDialect
#cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.MySQLDialect
#数据库用户名
#cas.authn.jdbc.query[0].user=root
#数据库用户密码
#cas.authn.jdbc.query[0].password=root
#数据库事务自动提交
#cas.authn.jdbc.query[0].autocommit=false
#数据库驱动
#cas.authn.jdbc.query[0].driverClass=com.mysql.cj.jdbc.Driver
#超时配置
#cas.authn.jdbc.query[0].idleTimeout=5000

#默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密
# NONE|DEFAULT|STANDARD|BCRYPT|SCRYPT|PBKDF2
#cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT
# 字符类型
#cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
# 加密算法
#cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5
# 加密盐
#cas.authn.jdbc.query[0].passwordEncoder.secret=
# 加密字符长度
#cas.authn.jdbc.query[0].passwordEncoder.strength=16


##
# Service Registry(服务注册)
#
# 开启识别Json文件，默认false
cas.serviceRegistry.initFromJson=true
#自动扫描服务配置，默认开启
cas.serviceRegistry.watcherEnabled=true
#120秒扫描一遍
cas.serviceRegistry.schedule.repeatInterval=120000
#延迟15秒开启
# sso.serviceRegistry.schedule.startDelay=15000
# Json配置
cas.serviceRegistry.json.location=classpath:/services

#数据库用户名
#cas.serviceRegistry.jpa.user=root
#数据库密码
#cas.serviceRegistry.jpa.password=root
#mysql驱动
#cas.serviceRegistry.jpa.driverClass=com.mysql.cj.jdbc.Driver
#数据库连接
#cas.serviceRegistry.jpa.url=jdbc:mysql://192.168.108.54:11191/zheng?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
#cas.serviceRegistry.jpa.dialect=org.hibernate.dialect.MySQL5Dialect

#cas.serviceRegistry.jpa.failFastTimeout=1
#cas.serviceRegistry.jpa.healthQuery=
#cas.serviceRegistry.jpa.isolateInternalQueries=false
#cas.serviceRegistry.jpa.leakThreshold=10
#cas.serviceRegistry.jpa.batchSize=1

#连接池配置
#cas.serviceRegistry.jpa.pool.suspension=false
#cas.serviceRegistry.jpa.pool.minSize=6
#cas.serviceRegistry.jpa.pool.maxSize=18
#cas.serviceRegistry.jpa.pool.maxWait=2000
#cas.serviceRegistry.jpa.pool.timeoutMillis=1000
#设置配置的服务，一直都有，不会给清除掉 ， 第一次使用，需要配置为 create-drop
#create-drop 重启cas服务的时候，就会给干掉
#create  没有表就创建，有就不创建
#none 一直都有
#update 更新
#cas.serviceRegistry.jpa.ddlAuto=update
#cas.serviceRegistry.jpa.autocommit=true
#cas.serviceRegistry.jpa.idleTimeout=5000


##
# 默认主题配置,屏蔽apereo的主题
#
cas.theme.defaultThemeName=unisinsight

##
#日志文件配置
#
logging.config=classpath:/log4j2.xml


##
# 单点注销配置
# Single Logout
#
#配置单点登出
#配置允许登出后跳转到指定页面,结合redirectParameter使用
cas.logout.followServiceRedirects=true
#跳转到指定页面需要的参数名为 service
cas.logout.redirectParameter=service
#登出后需要跳转到的地址,如果配置该参数,service将无效。
#cas.logout.redirectUrl=http://localhost:8080/cas/login
#在退出时是否需要 确认退出提示   true弹出确认提示框  false直接退出
cas.logout.confirmLogout=false
#是否移除子系统的票据
cas.logout.removeDescendantTickets=true
#禁用单点登出,默认是false不禁止
#cas.slo.disabled=true
#默认异步通知客户端,清除session
#cas.slo.asynchronous=true

##
# Ticket过期设置
#
cas.ticket.st.numberOfUses=1
# 默认10s
cas.ticket.st.timeToKillInSeconds=60


##
#票证授予Cookie
#
#cas.tgc.path=
#cas.tgc.maxAge=-1
#cas.tgc.domain=localhost
#cas.tgc.name=TGC
#默认在https下会生成tgc，使用http需注释掉，不然多系统无法实现单点登录
cas.tgc.secure=false
#cas.tgc.httpOnly=true
#cas.tgc.rememberMeMaxAge=1209600
#cas.tgc.pinToSession=true

##
#警告Cookie
#如果在访问CAS保护的服务时要警告用户，则由CAS创建。
#
# cas.warningCookie.path=
# cas.warningCookie.maxAge=-1
# cas.warningCookie.domain=
# cas.warningCookie.name=CASPRIVACY
#默认在https下会生成warningCookie,使用http需注释掉，不然多系统无法实现单点登录
cas.warningCookie.secure=false
# cas.warningCookie.httpOnly=true


##
#jdbc资源配置
#
jdbc.ds.driverClassName=org.postgresql.Driver
jdbc.ds.url=jdbc:postgresql://192.168.108.52:5432/infra?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull
jdbc.ds.username=pgsql
jdbc.ds.password=pgsql
jdbc.ds.querySql=select user_code as username,password,expired,disabled from uuv.user_info where user_code = ? AND deleted=0 AND status=0

#默认加密策略，通过encodingAlgorithm来指定算法，默认NONE不加密
# NONE|DEFAULT|STANDARD|BCRYPT|SCRYPT|PBKDF2
#CasJdbcAuthenticationConfiguration在该类中由于引入query[0]，导致注册
#了一个认证处理handler[queryDatabaseAuthenticationHandler]
cas.authn.jdbc.query[0].passwordEncoder.type=DEFAULT
# 字符类型
cas.authn.jdbc.query[0].passwordEncoder.characterEncoding=UTF-8
# 加密算法
cas.authn.jdbc.query[0].passwordEncoder.encodingAlgorithm=MD5
# 加密盐
#cas.authn.jdbc.query[0].passwordEncoder.secret=
# 加密字符长度
#cas.authn.jdbc.query[0].passwordEncoder.strength=16

##
#据rememberMe.enabled注册Captcha
#
cas.ticket.tgt.rememberMe.enabled=true
cas.ticket.tgt.rememberMe.timeToKillInSeconds=3600


##
#自定义异常
#
cas.authn.exceptions.exceptions=com.unisinsight.sso.exception.UsernamePasswordException,com.unisinsight.sso.exception.AccountDisableException,com.unisinsight.sso.exception.CaptchaException,com.unisinsight.sso.exception.AccountExpireException


##
#OAuth
#
cas.authn.oauth.refreshToken.timeToKillInSeconds=2592000
cas.authn.oauth.code.timeToKillInSeconds=30
cas.authn.oauth.code.numberOfUses=1
cas.authn.oauth.accessToken.releaseProtocolAttributes=true
cas.authn.oauth.accessToken.timeToKillInSeconds=7200
#默认 28800
cas.authn.oauth.accessToken.maxTimeToLiveInSeconds=28800
cas.authn.oauth.grants.resourceOwner.requireServiceHeader=true
cas.authn.oauth.userProfileViewType=NESTED
#需要配置 server name的信息，不然就会跑到 https://cas.example.org:8443
cas.server.name=https://localhost:${server.port}/cas
cas.server.prefix=${cas.server.name}


# 开启rest验证并配置url
cas.authn.rest.uri=https://localhost:8443/cas/rest/login
cas.authn.rest.passwordEncoder.type=DEFAULT
cas.authn.rest.passwordEncoder.characterEncoding=UTF-8
cas.authn.rest.passwordEncoder.encodingAlgorithm=MD5